{
  "name": "codeWise",
  "nodes": [
    {
      "parameters": {
        "authentication": "oAuth2",
        "owner": {
          "__rl": true,
          "value": "",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "events": [
          "pull_request"
        ],
        "options": {
          "insecureSSL": false
        }
      },
      "type": "n8n-nodes-base.githubTrigger",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "235aaf40-be7e-4345-b17d-4f3f1a49a665",
      "name": "Github Trigger",
      "webhookId": "e61061c1-67de-477e-8393-b91d9f6337b0",
      "credentials": {
        "githubOAuth2Api": {
          "id": "eOFMZFOLUKD3MTFb",
          "name": "GitHub Oauth2"
        }
      }
    },
    {
      "parameters": {
        "url": "=\nhttps://api.github.com/repos/{{ $json.body.repository.owner.login }}/{{ $json.body.repository.name }}/git/trees/{{ $json.body.head_commit.tree_id }}?recursive=1\n\n",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "githubOAuth2Api",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        460,
        0
      ],
      "id": "48dcbe95-e57b-4f9a-9341-b97c2f649e82",
      "name": "HTTP Request",
      "credentials": {
        "githubOAuth2Api": {
          "id": "eOFMZFOLUKD3MTFb",
          "name": "GitHub Oauth2"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a3ddb84d-eb40-4787-894b-c085508cbf29",
              "name": "path",
              "value": "={{ $json.path }}",
              "type": "string"
            },
            {
              "id": "864c6243-183d-4958-bda7-8bca3079e035",
              "name": "url",
              "value": "={{ $json.url }}",
              "type": "string"
            },
            {
              "id": "e58bd8ac-7abe-4cc3-a3b4-ab37d23f1368",
              "name": "sha",
              "value": "={{ $json.sha }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        940,
        0
      ],
      "id": "60b0448c-848d-4e3d-aaff-1819db622974",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "fieldToSplitOut": "tree",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        680,
        0
      ],
      "id": "30f25f5a-b156-4142-a7bd-6382ab120655",
      "name": "Split Out"
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "githubOAuth2Api",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1160,
        0
      ],
      "id": "2b304075-e0c9-4833-af29-ba98f76eb94a",
      "name": "HTTP Request1",
      "credentials": {
        "githubOAuth2Api": {
          "id": "eOFMZFOLUKD3MTFb",
          "name": "GitHub Oauth2"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e8b41932-c39b-4d61-84db-df5b547dbc6b",
              "name": "content",
              "value": "={{ $json.content }}",
              "type": "string"
            }
          ]
        },
        "options": {
          "ignoreConversionErrors": true
        }
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        0,
        220
      ],
      "id": "032d00e5-c7da-4800-8e13-17869b0c3437",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "import base64\n\ndef decode_base64(item):\n    base64_str = item['json'].get('content', '')\n    try:\n        decoded = base64.b64decode(base64_str).decode('utf-8')\n        return { \"decoded\": decoded }\n    except Exception as e:\n        return { \"decoded\": f\"Erro: {str(e)}\" }\n\nreturn [decode_base64(item) for item in items]\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        200,
        220
      ],
      "id": "ac7cec09-226c-48d1-80d1-0e385fcdb18c",
      "name": "Code"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b9654b7d-2d94-4a2b-92ab-3ab980aeed6e",
              "name": "decoded",
              "value": "={{ $json.decoded }}",
              "type": "string"
            },
            {
              "id": "ca7f0e5e-6837-474e-8e7f-14fe59c9e909",
              "name": "path",
              "value": "={{ $('Split Out').item.json.path }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        420,
        220
      ],
      "id": "2c8f127c-31d1-488d-ab83-80e86342fe68",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "modelName": "models/gemini-1.5-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1060,
        540
      ],
      "id": "4c560ab7-5894-4125-8e8e-ae272c814250",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "Yb4wqSyHV24yE03h",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "bea8e214-eccc-498c-ba7a-d4a51f58585e",
              "leftValue": "={{ $json.path }}",
              "rightValue": ".toml",
              "operator": {
                "type": "string",
                "operation": "endsWith"
              }
            },
            {
              "id": "7e37da3f-4819-41d3-9da3-feb78e9bf589",
              "leftValue": "={{ $json.path }}",
              "rightValue": ".yml",
              "operator": {
                "type": "string",
                "operation": "endsWith"
              }
            },
            {
              "id": "acff8c30-fd50-45c5-a384-5e7e3bef50c8",
              "leftValue": "",
              "rightValue": ".yaml",
              "operator": {
                "type": "string",
                "operation": "endsWith"
              }
            },
            {
              "id": "50aa482f-c4e3-4577-a911-a337e033d328",
              "leftValue": "={{ $json.path }}",
              "rightValue": "LICENSE",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        640,
        220
      ],
      "id": "8b8f5083-4ad3-48b3-9489-f5a74cbd3fc8",
      "name": "If"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Me ajude a melhorar minha codificação, me mostrando possíveis melhoraras no padrão de projeto, adesão ao padrão S.O.L.I.D, assim como também design partners do código a seguir:\n {{ $json.path }}\n{{ $json.decoded }}",
        "options": {
          "systemMessage": "Você é um programador senior com mais de 8 anos de experiência do qual se qualificou na alise de código, analisando code smell, otimização e design partners."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        1160,
        340
      ],
      "id": "6c5a5073-72e9-4bec-8828-dd96f2fb27f8",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ef37d3f7-9771-4138-b68d-6fffa94a2f2c",
              "leftValue": "={{ $json.decoded }}",
              "rightValue": "Erro:",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        840,
        300
      ],
      "id": "3987638c-d8f0-4fee-922c-81113c0517b3",
      "name": "If1"
    },
    {
      "parameters": {
        "text": "={{ $json.parte }}",
        "additionalFields": {
          "appendAttribution": false,
          "disable_web_page_preview": true,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1880,
        320
      ],
      "id": "e38a048f-712b-47b8-9bcf-079fad4ff4a9",
      "name": "Telegram",
      "webhookId": "2832efed-ca24-4a6f-b7f4-652c52c214af",
      "credentials": {
        "telegramApi": {
          "id": "dQGODUs0zaiZ8saJ",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bff5fb55-2369-4183-86d0-fe68bb5f7e33",
              "name": "output",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1500,
        320
      ],
      "id": "2cf902c5-575f-4a8b-aa9b-c5cf7e95fbd2",
      "name": "Edit Fields3"
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "import re\nimport html\n\noutput = []\n\nfor item in items:\n    texto = item['json'].get('output', '')\n    # remove tags HTML suspeitas\n    texto_limpo = re.sub(r'<[^>]+>', '', texto)\n    # escapa qualquer símbolo HTML restante (&, <, >, etc.)\n    texto_html_safe = html.escape(texto_limpo)\n    \n    for i in range(0, len(texto_html_safe), 4096):\n        output.append({\n            \"json\": {\n                \"parte\": texto_html_safe[i:i+4096]\n            }\n        })\n\nreturn output\n\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1700,
        320
      ],
      "id": "837bd9f1-3081-4bbc-a783-77dc2096b3a0",
      "name": "Code1"
    }
  ],
  "pinData": {},
  "connections": {
    "Github Trigger": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [],
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [],
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram": {
      "main": [
        []
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "6654a28c-a590-4608-b4eb-d795dedf53fa",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "8c0d133aedbd2315584dd4de8d42493702953e89aed534f75c602cee4f5c6a06"
  },
  "id": "IUO95azIjNdcdBzx",
  "tags": []
}